diff --git a/.iex.exs b/.iex.exs
index a60947e..f7a90d2 100644
--- a/.iex.exs
+++ b/.iex.exs
@@ -4,3 +4,4 @@ alias Raffley.Admin
 alias Raffley.Raffles.Raffle
 import Ecto.Query
 import Ecto.Changeset
+alias Raffley.Charities.Charity
diff --git a/lib/raffley/raffles.ex b/lib/raffley/raffles.ex
index 94a9218..20b1c97 100644
--- a/lib/raffley/raffles.ex
+++ b/lib/raffley/raffles.ex
@@ -1,6 +1,7 @@
 defmodule Raffley.Raffles do
   alias Raffley.Raffles.Raffle
   alias Raffley.Repo
+  alias Raffley.Charities.Charity
   import Ecto.Query
 
   def list_raffles do
@@ -10,9 +11,11 @@ defmodule Raffley.Raffles do
   def filter_raffles(filter) do
     Raffle
     |> with_status(filter["status"])
+    |> with_charity(filter["charity"])
     |> search_by(filter["q"])
     |> sort(filter["sort_by"])
     |> Repo.all()
+    |> Repo.preload(:charity)
   end
 
   defp with_status(query, status) when status in ~w(open closed upcoming) do
@@ -21,6 +24,14 @@ defmodule Raffley.Raffles do
 
   defp with_status(query, _), do: query
 
+  defp with_charity(query, slug) when slug in ["", nil], do: query
+
+  defp with_charity(query, slug) do
+    query
+    |> join(:inner, [r], c in Charity, on: r.charity_id == c.id)
+    |> where([r, c], c.slugh == ^slug)
+  end
+
   defp search_by(query, q) when q in ["", nil] do
     query
   end
@@ -34,12 +45,17 @@ defmodule Raffley.Raffles do
   defp sort_option("ticket_price_asc"), do: [asc: :ticket_price]
   defp sort_option(_), do: :id
 
+  defp sort(query, sort_by) when sort_by == "charity" do
+    from r in query, join: c in Charity, on: r.charity_id == c.id, order_by: c.name
+  end
+
   defp sort(query, sort_by) do
     order_by(query, ^sort_option(sort_by))
   end
 
   def get_raffle!(id) do
     Repo.get!(Raffle, id)
+    |> Repo.preload(:charity)
   end
 
   def featured_raffles(raffle) do
diff --git a/lib/raffley/raffles/raffle.ex b/lib/raffley/raffles/raffle.ex
index 78b67f1..e291926 100644
--- a/lib/raffley/raffles/raffle.ex
+++ b/lib/raffley/raffles/raffle.ex
@@ -9,16 +9,18 @@ defmodule Raffley.Raffles.Raffle do
     field :ticket_price, :integer, default: 1
     field :image_path, :string, default: "/images/placeholder.jpg"
 
+    belongs_to :charity, Raffley.Charities.Charity
+
     timestamps(type: :utc_datetime)
   end
 
   @doc false
   def changeset(raffle, attrs) do
     raffle
-    |> cast(attrs, [:prize, :description, :ticket_price, :status, :image_path])
-    |> validate_required([:prize, :description, :ticket_price, :status, :image_path])
+    |> cast(attrs, [:prize, :description, :ticket_price, :status, :image_path, :charity_id])
+    |> validate_required([:prize, :description, :ticket_price, :status, :image_path, :charity_id])
     |> validate_length(:description, min: 10)
     |> validate_number(:ticket_price, greater_than_or_equal_to: 1)
+    |> assoc_constraint(:charity)
   end
-
 end
diff --git a/lib/raffley_web/components/layouts/app.html.heex b/lib/raffley_web/components/layouts/app.html.heex
index f6b7569..ce548aa 100644
--- a/lib/raffley_web/components/layouts/app.html.heex
+++ b/lib/raffley_web/components/layouts/app.html.heex
@@ -15,6 +15,9 @@
       <.link navigate={~p"/admin/raffles"}>
         Admin
       </.link>
+      <.link navigate={~p"/charities"}>
+        Charities
+      </.link>
     </div>
   </div>
 </header>
diff --git a/lib/raffley_web/live/admin_raffle_live/form.ex b/lib/raffley_web/live/admin_raffle_live/form.ex
index 98b9e68..ba0736f 100644
--- a/lib/raffley_web/live/admin_raffle_live/form.ex
+++ b/lib/raffley_web/live/admin_raffle_live/form.ex
@@ -2,10 +2,16 @@ defmodule RaffleyWeb.AdminRaffleLive.Form do
   use RaffleyWeb, :live_view
   alias Raffley.Admin
   alias Raffley.Raffles.Raffle
+  alias Raffley.Charities
   # import RaffleyWeb.CustomComponents
 
   def mount(params, _session, socket) do
-    {:ok, apply_action(socket, socket.assigns.live_action, params)}
+    socket =
+      socket
+      |> assign(:charity_options, Charities.charity_names_and_ids())
+      |> apply_action(socket.assigns.live_action, params)
+
+    {:ok, socket}
   end
 
   defp apply_action(socket, :new, _params) do
@@ -44,6 +50,15 @@ defmodule RaffleyWeb.AdminRaffleLive.Form do
         prompt="Choose a status"
         options={[:upcoming, :open, :closed]}
       />
+
+      <.input
+        field={@form[:charity_id]}
+        type="select"
+        label="Charity"
+        prompt="Choose a charity"
+        options={@charity_options}
+      />
+
       <.input field={@form[:image_path]} label="Image Path" />
       <:actions>
         <.button phx-disable-with="Saving...">Save Raffle</.button>
diff --git a/lib/raffley_web/live/raffle_live/index.ex b/lib/raffley_web/live/raffle_live/index.ex
index c975c50..b1d8698 100644
--- a/lib/raffley_web/live/raffle_live/index.ex
+++ b/lib/raffley_web/live/raffle_live/index.ex
@@ -1,6 +1,7 @@
 defmodule RaffleyWeb.RaffleLive.Index do
   use RaffleyWeb, :live_view
   alias Raffley.Raffles
+  alias Raffley.Charities
   import RaffleyWeb.CustomComponents
 
   def mount(_params, _session, socket) do
@@ -14,6 +15,8 @@ defmodule RaffleyWeb.RaffleLive.Index do
     #     socket
     #   end)
 
+    socket = assign(socket, :charity_options, Charities.charity_names_and_slugs())
+
     {:ok, socket}
   end
 
@@ -39,7 +42,7 @@ defmodule RaffleyWeb.RaffleLive.Index do
         </:details>
       </.banner>
 
-      <.filter_form form={@form} />
+      <.filter_form form={@form} charity_options={@charity_options} />
 
       <div class="raffles" id="raffles" phx-update="stream">
         <div id="empty" class="no-results only:block hidden">
@@ -62,6 +65,7 @@ defmodule RaffleyWeb.RaffleLive.Index do
         prompt="Status"
         options={[:upcoming, :open, :closed]}
       />
+      <.input type="select" field={@form[:charity]} prompt="Charity" options={@charity_options} />
       <.input
         type="select"
         field={@form[:sort_by]}
@@ -69,7 +73,8 @@ defmodule RaffleyWeb.RaffleLive.Index do
         options={[
           Prize: "prize",
           "Price: High to Low": "ticket_price_desc",
-          "Price: Low to High": "ticket_price_asc"
+          "Price: Low to High": "ticket_price_asc",
+          Charity: "charity"
         ]}
       />
 
@@ -85,6 +90,9 @@ defmodule RaffleyWeb.RaffleLive.Index do
     ~H"""
     <.link navigate={~p"/raffles/#{@raffle.id}"} id={@id}>
       <div class="card">
+        <div class="charity">
+          {@raffle.charity.name}
+        </div>
         <img src={@raffle.image_path} />
         <h2>{@raffle.prize}</h2>
         <div class="details">
@@ -101,7 +109,7 @@ defmodule RaffleyWeb.RaffleLive.Index do
   def handle_event("filter", params, socket) do
     params =
       params
-      |> Map.take(~w(q status sort_by))
+      |> Map.take(~w(q status sort_by charity))
       |> Map.reject(fn {_, v} -> v == "" end)
 
     socket = push_patch(socket, to: ~p"/raffles?#{params}")
diff --git a/lib/raffley_web/live/raffle_live/show.ex b/lib/raffley_web/live/raffle_live/show.ex
index 2aa6a71..f84801a 100644
--- a/lib/raffley_web/live/raffle_live/show.ex
+++ b/lib/raffley_web/live/raffle_live/show.ex
@@ -50,7 +50,10 @@ defmodule RaffleyWeb.RaffleLive.Show do
         <section>
           <.badge status={@raffle.status} />
           <header>
-            <h2>{@raffle.prize}</h2>
+            <div>
+              <h2>{@raffle.prize}</h2>
+              <h3>{@raffle.charity.name}</h3>
+            </div>
             <div class="price">
               ${@raffle.ticket_price} / ticket
             </div>
diff --git a/lib/raffley_web/router.ex b/lib/raffley_web/router.ex
index 2741a2a..3a8d72e 100644
--- a/lib/raffley_web/router.ex
+++ b/lib/raffley_web/router.ex
@@ -29,6 +29,11 @@ defmodule RaffleyWeb.Router do
     live "/admin/raffles", AdminRaffleLive.Index
     live "/admin/raffles/new", AdminRaffleLive.Form, :new
     live "/admin/raffles/:id/edit", AdminRaffleLive.Form, :edit
+
+    live "/charities", CharityLive.Index, :index
+    live "/charities/new", CharityLive.Form, :new
+    live "/charities/:id", CharityLive.Show, :show
+    live "/charities/:id/edit", CharityLive.Form, :edit
   end
 
   def spy(conn, _opts) do
@@ -41,9 +46,13 @@ defmodule RaffleyWeb.Router do
   end
 
   # Other scopes may use custom stacks.
-  # scope "/api", RaffleyWeb do
-  #   pipe_through :api
-  # end
+  scope "/api", RaffleyWeb.Api do
+    pipe_through :api
+
+    get "/raffles", RaffleController, :index
+    get "/raffles/:id", RaffleController, :show
+    post "/raffles", RaffleController, :create
+  end
 
   # Enable LiveDashboard and Swoosh mailbox preview in development
   if Application.compile_env(:raffley, :dev_routes) do
diff --git a/mix.exs b/mix.exs
index 6eef80b..2e645af 100644
--- a/mix.exs
+++ b/mix.exs
@@ -33,6 +33,7 @@ defmodule Raffley.MixProject do
   defp deps do
     [
       {:phoenix, "~> 1.7.21"},
+      # {:phoenix, github: "phoenixframework/phoenix", ref: "05d21a8", override: true},
       {:phoenix_ecto, "~> 4.5"},
       {:ecto_sql, "~> 3.10"},
       {:postgrex, ">= 0.0.0"},
diff --git a/mix.lock b/mix.lock
index df0db1c..595e6f6 100644
--- a/mix.lock
+++ b/mix.lock
@@ -1,6 +1,6 @@
 %{
   "bandit": {:hex, :bandit, "1.6.11", "2fbadd60c95310eefb4ba7f1e58810aa8956e18c664a3b2029d57edb7d28d410", [:mix], [{:hpax, "~> 1.0", [hex: :hpax, repo: "hexpm", optional: false]}, {:plug, "~> 1.14", [hex: :plug, repo: "hexpm", optional: false]}, {:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}, {:thousand_island, "~> 1.0", [hex: :thousand_island, repo: "hexpm", optional: false]}, {:websock, "~> 0.5", [hex: :websock, repo: "hexpm", optional: false]}], "hexpm", "543f3f06b4721619a1220bed743aa77bf7ecc9c093ba9fab9229ff6b99eacc65"},
-  "castore": {:hex, :castore, "1.0.12", "053f0e32700cbec356280c0e835df425a3be4bc1e0627b714330ad9d0f05497f", [:mix], [], "hexpm", "3dca286b2186055ba0c9449b4e95b97bf1b57b47c1f2644555879e659960c224"},
+  "castore": {:hex, :castore, "1.0.14", "4582dd7d630b48cf5e1ca8d3d42494db51e406b7ba704e81fbd401866366896a", [:mix], [], "hexpm", "7bc1b65249d31701393edaaac18ec8398d8974d52c647b7904d01b964137b9f4"},
   "circular_buffer": {:hex, :circular_buffer, "0.4.1", "477f370fd8cfe1787b0a1bade6208bbd274b34f1610e41f1180ba756a7679839", [:mix], [], "hexpm", "633ef2e059dde0d7b89bbab13b1da9d04c6685e80e68fbdf41282d4fae746b72"},
   "db_connection": {:hex, :db_connection, "2.7.0", "b99faa9291bb09892c7da373bb82cba59aefa9b36300f6145c5f201c7adf48ec", [:mix], [{:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "dcf08f31b2701f857dfc787fbad78223d61a32204f217f15e881dd93e4bdd3ff"},
   "decimal": {:hex, :decimal, "2.3.0", "3ad6255aa77b4a3c4f818171b12d237500e63525c2fd056699967a3e7ea20f62", [:mix], [], "hexpm", "a4d66355cb29cb47c3cf30e71329e58361cfcb37c34235ef3bf1d7bf3773aeac"},
@@ -16,7 +16,7 @@
   "heroicons": {:git, "https://github.com/tailwindlabs/heroicons.git", "88ab3a0d790e6a47404cba02800a6b25d2afae50", [tag: "v2.1.1", sparse: "optimized", depth: 1]},
   "hpax": {:hex, :hpax, "1.0.3", "ed67ef51ad4df91e75cc6a1494f851850c0bd98ebc0be6e81b026e765ee535aa", [:mix], [], "hexpm", "8eab6e1cfa8d5918c2ce4ba43588e894af35dbd8e91e6e55c817bca5847df34a"},
   "jason": {:hex, :jason, "1.4.4", "b9226785a9aa77b6857ca22832cffa5d5011a667207eb2a0ad56adb5db443b8a", [:mix], [{:decimal, "~> 1.0 or ~> 2.0", [hex: :decimal, repo: "hexpm", optional: true]}], "hexpm", "c5eb0cab91f094599f94d55bc63409236a8ec69a21a67814529e8d5f6cc90b3b"},
-  "mime": {:hex, :mime, "2.0.6", "8f18486773d9b15f95f4f4f1e39b710045fa1de891fada4516559967276e4dc2", [:mix], [], "hexpm", "c9945363a6b26d747389aac3643f8e0e09d30499a138ad64fe8fd1d13d9b153e"},
+  "mime": {:hex, :mime, "2.0.7", "b8d739037be7cd402aee1ba0306edfdef982687ee7e9859bee6198c1e7e2f128", [:mix], [], "hexpm", "6171188e399ee16023ffc5b76ce445eb6d9672e2e241d2df6050f3c771e80ccd"},
   "mint": {:hex, :mint, "1.7.1", "113fdb2b2f3b59e47c7955971854641c61f378549d73e829e1768de90fc1abf1", [:mix], [{:castore, "~> 0.1.0 or ~> 1.0", [hex: :castore, repo: "hexpm", optional: true]}, {:hpax, "~> 0.1.1 or ~> 0.2.0 or ~> 1.0", [hex: :hpax, repo: "hexpm", optional: false]}], "hexpm", "fceba0a4d0f24301ddee3024ae116df1c3f4bb7a563a731f45fdfeb9d39a231b"},
   "nimble_options": {:hex, :nimble_options, "1.1.1", "e3a492d54d85fc3fd7c5baf411d9d2852922f66e69476317787a7b2bb000a61b", [:mix], [], "hexpm", "821b2470ca9442c4b6984882fe9bb0389371b8ddec4d45a9504f00a66f650b44"},
   "nimble_pool": {:hex, :nimble_pool, "1.1.0", "bf9c29fbdcba3564a8b800d1eeb5a3c58f36e1e11d7b7fb2e084a643f645f06b", [:mix], [], "hexpm", "af2e4e6b34197db81f7aad230c1118eac993acc0dae6bc83bac0126d4ae0813a"},
@@ -29,7 +29,7 @@
   "phoenix_pubsub": {:hex, :phoenix_pubsub, "2.1.3", "3168d78ba41835aecad272d5e8cd51aa87a7ac9eb836eabc42f6e57538e3731d", [:mix], [], "hexpm", "bba06bc1dcfd8cb086759f0edc94a8ba2bc8896d5331a1e2c2902bf8e36ee502"},
   "phoenix_template": {:hex, :phoenix_template, "1.0.4", "e2092c132f3b5e5b2d49c96695342eb36d0ed514c5b252a77048d5969330d639", [:mix], [{:phoenix_html, "~> 2.14.2 or ~> 3.0 or ~> 4.0", [hex: :phoenix_html, repo: "hexpm", optional: true]}], "hexpm", "2c0c81f0e5c6753faf5cca2f229c9709919aba34fab866d3bc05060c9c444206"},
   "plug": {:hex, :plug, "1.17.0", "a0832e7af4ae0f4819e0c08dd2e7482364937aea6a8a997a679f2cbb7e026b2e", [:mix], [{:mime, "~> 1.0 or ~> 2.0", [hex: :mime, repo: "hexpm", optional: false]}, {:plug_crypto, "~> 1.1.1 or ~> 1.2 or ~> 2.0", [hex: :plug_crypto, repo: "hexpm", optional: false]}, {:telemetry, "~> 0.4.3 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "f6692046652a69a00a5a21d0b7e11fcf401064839d59d6b8787f23af55b1e6bc"},
-  "plug_crypto": {:hex, :plug_crypto, "2.1.0", "f44309c2b06d249c27c8d3f65cfe08158ade08418cf540fd4f72d4d6863abb7b", [:mix], [], "hexpm", "131216a4b030b8f8ce0f26038bc4421ae60e4bb95c5cf5395e1421437824c4fa"},
+  "plug_crypto": {:hex, :plug_crypto, "2.1.1", "19bda8184399cb24afa10be734f84a16ea0a2bc65054e23a62bb10f06bc89491", [:mix], [], "hexpm", "6470bce6ffe41c8bd497612ffde1a7e4af67f36a15eea5f921af71cf3e11247c"},
   "postgrex": {:hex, :postgrex, "0.20.0", "363ed03ab4757f6bc47942eff7720640795eb557e1935951c1626f0d303a3aed", [:mix], [{:db_connection, "~> 2.1", [hex: :db_connection, repo: "hexpm", optional: false]}, {:decimal, "~> 1.5 or ~> 2.0", [hex: :decimal, repo: "hexpm", optional: false]}, {:jason, "~> 1.0", [hex: :jason, repo: "hexpm", optional: true]}, {:table, "~> 0.1.0", [hex: :table, repo: "hexpm", optional: true]}], "hexpm", "d36ef8b36f323d29505314f704e21a1a038e2dc387c6409ee0cd24144e187c0f"},
   "req": {:hex, :req, "0.5.10", "a3a063eab8b7510785a467f03d30a8d95f66f5c3d9495be3474b61459c54376c", [:mix], [{:brotli, "~> 0.3.1", [hex: :brotli, repo: "hexpm", optional: true]}, {:ezstd, "~> 1.0", [hex: :ezstd, repo: "hexpm", optional: true]}, {:finch, "~> 0.17", [hex: :finch, repo: "hexpm", optional: false]}, {:jason, "~> 1.0", [hex: :jason, repo: "hexpm", optional: false]}, {:mime, "~> 2.0.6 or ~> 2.1", [hex: :mime, repo: "hexpm", optional: false]}, {:nimble_csv, "~> 1.0", [hex: :nimble_csv, repo: "hexpm", optional: true]}, {:plug, "~> 1.0", [hex: :plug, repo: "hexpm", optional: true]}], "hexpm", "8a604815743f8a2d3b5de0659fa3137fa4b1cffd636ecb69b30b2b9b2c2559be"},
   "swoosh": {:hex, :swoosh, "1.18.4", "5f5f325cfbc68d454f1606421f2dd02d1b20fd03e10905e9728b26662ae01f1d", [:mix], [{:bandit, ">= 1.0.0", [hex: :bandit, repo: "hexpm", optional: true]}, {:cowboy, "~> 1.1 or ~> 2.4", [hex: :cowboy, repo: "hexpm", optional: true]}, {:ex_aws, "~> 2.1", [hex: :ex_aws, repo: "hexpm", optional: true]}, {:finch, "~> 0.6", [hex: :finch, repo: "hexpm", optional: true]}, {:gen_smtp, "~> 0.13 or ~> 1.0", [hex: :gen_smtp, repo: "hexpm", optional: true]}, {:hackney, "~> 1.9", [hex: :hackney, repo: "hexpm", optional: true]}, {:jason, "~> 1.0", [hex: :jason, repo: "hexpm", optional: false]}, {:mail, "~> 0.2", [hex: :mail, repo: "hexpm", optional: true]}, {:mime, "~> 1.1 or ~> 2.0", [hex: :mime, repo: "hexpm", optional: false]}, {:mua, "~> 0.2.3", [hex: :mua, repo: "hexpm", optional: true]}, {:multipart, "~> 0.4", [hex: :multipart, repo: "hexpm", optional: true]}, {:plug, "~> 1.9", [hex: :plug, repo: "hexpm", optional: true]}, {:plug_cowboy, ">= 1.0.0", [hex: :plug_cowboy, repo: "hexpm", optional: true]}, {:req, "~> 0.5.10 or ~> 0.6 or ~> 1.0", [hex: :req, repo: "hexpm", optional: true]}, {:telemetry, "~> 0.4.2 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "c8b45e6f9109bdf89f3d83f810e0cc97c1c971925e72fc4f47da42959d8487ee"},
@@ -37,7 +37,7 @@
   "telemetry": {:hex, :telemetry, "1.3.0", "fedebbae410d715cf8e7062c96a1ef32ec22e764197f70cda73d82778d61e7a2", [:rebar3], [], "hexpm", "7015fc8919dbe63764f4b4b87a95b7c0996bd539e0d499be6ec9d7f3875b79e6"},
   "telemetry_metrics": {:hex, :telemetry_metrics, "1.1.0", "5bd5f3b5637e0abea0426b947e3ce5dd304f8b3bc6617039e2b5a008adc02f8f", [:mix], [{:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "e7b79e8ddfde70adb6db8a6623d1778ec66401f366e9a8f5dd0955c56bc8ce67"},
   "telemetry_poller": {:hex, :telemetry_poller, "1.2.0", "ba82e333215aed9dd2096f93bd1d13ae89d249f82760fcada0850ba33bac154b", [:rebar3], [{:telemetry, "~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "7216e21a6c326eb9aa44328028c34e9fd348fb53667ca837be59d0aa2a0156e8"},
-  "thousand_island": {:hex, :thousand_island, "1.3.12", "590ff651a6d2a59ed7eabea398021749bdc664e2da33e0355e6c64e7e1a2ef93", [:mix], [{:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "55d0b1c868b513a7225892b8a8af0234d7c8981a51b0740369f3125f7c99a549"},
+  "thousand_island": {:hex, :thousand_island, "1.3.14", "ad45ebed2577b5437582bcc79c5eccd1e2a8c326abf6a3464ab6c06e2055a34a", [:mix], [{:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "d0d24a929d31cdd1d7903a4fe7f2409afeedff092d277be604966cd6aa4307ef"},
   "tidewave": {:hex, :tidewave, "0.1.6", "f07514ee2c348c2e682a2632309ac6d8ec425392bfb803955a6bb19ca5508e2f", [:mix], [{:circular_buffer, "~> 0.4", [hex: :circular_buffer, repo: "hexpm", optional: false]}, {:igniter, ">= 0.5.47 and < 1.0.0-0", [hex: :igniter, repo: "hexpm", optional: true]}, {:jason, "~> 1.4", [hex: :jason, repo: "hexpm", optional: false]}, {:plug, "~> 1.17", [hex: :plug, repo: "hexpm", optional: false]}, {:req, "~> 0.5", [hex: :req, repo: "hexpm", optional: false]}], "hexpm", "3708592f325e1f54b99b215cd8c38f726732451bf5cfa16d73584793f99d9da4"},
   "websock": {:hex, :websock, "0.5.3", "2f69a6ebe810328555b6fe5c831a851f485e303a7c8ce6c5f675abeb20ebdadc", [:mix], [], "hexpm", "6105453d7fac22c712ad66fab1d45abdf049868f253cf719b625151460b8b453"},
   "websock_adapter": {:hex, :websock_adapter, "0.5.8", "3b97dc94e407e2d1fc666b2fb9acf6be81a1798a2602294aac000260a7c4a47d", [:mix], [{:bandit, ">= 0.6.0", [hex: :bandit, repo: "hexpm", optional: true]}, {:plug, "~> 1.14", [hex: :plug, repo: "hexpm", optional: false]}, {:plug_cowboy, "~> 2.6", [hex: :plug_cowboy, repo: "hexpm", optional: true]}, {:websock, "~> 0.5", [hex: :websock, repo: "hexpm", optional: false]}], "hexpm", "315b9a1865552212b5f35140ad194e67ce31af45bcee443d4ecb96b5fd3f3782"},
diff --git a/priv/repo/seeds.exs b/priv/repo/seeds.exs
index 094f07f..cf497a9 100644
--- a/priv/repo/seeds.exs
+++ b/priv/repo/seeds.exs
@@ -12,6 +12,23 @@
 
 alias Raffley.Repo
 alias Raffley.Raffles.Raffle
+alias Raffley.Charities.Charity
+
+wildlife =
+  %Charity{name: "Wildlife Refuge", slugh: "wildlife-refuge"}
+  |> Repo.insert!()
+
+food =
+  %Charity{name: "Food Pantry", slugh: "food-pantry"}
+  |> Repo.insert!()
+
+hope =
+  %Charity{name: "Homes of Hope", slugh: "homes-of-hope"}
+  |> Repo.insert!()
+
+grace =
+  %Charity{name: "Grace Foundation", slugh: "grace-foundation"}
+  |> Repo.insert!()
 
 %Raffle{
   prize: "Autographed Jersey",
@@ -20,7 +37,8 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 2,
   status: :open,
-  image_path: "/images/jersey.jpg"
+  image_path: "/images/jersey.jpg",
+  charity: hope
 }
 |> Repo.insert!()
 
@@ -31,7 +49,8 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 3,
   status: :upcoming,
-  image_path: "/images/yeti-coffee.jpg"
+  image_path: "/images/yeti-coffee.jpg",
+  charity: wildlife
 }
 |> Repo.insert!()
 
@@ -42,7 +61,8 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 1,
   status: :closed,
-  image_path: "/images/comic-book.jpg"
+  image_path: "/images/comic-book.jpg",
+  charity: food
 }
 |> Repo.insert!()
 
@@ -53,7 +73,8 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 3,
   status: :open,
-  image_path: "/images/dinner-for-two.jpg"
+  image_path: "/images/dinner-for-two.jpg",
+  charity: hope
 }
 |> Repo.insert!()
 
@@ -64,7 +85,8 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 2,
   status: :open,
-  image_path: "/images/cooking-class.jpg"
+  image_path: "/images/cooking-class.jpg",
+  charity: food
 }
 |> Repo.insert!()
 
@@ -75,7 +97,8 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 3,
   status: :upcoming,
-  image_path: "/images/basketball-tickets.jpg"
+  image_path: "/images/basketball-tickets.jpg",
+  charity: grace
 }
 |> Repo.insert!()
 
@@ -86,7 +109,8 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 1,
   status: :closed,
-  image_path: "/images/chocolate-basket.jpg"
+  image_path: "/images/chocolate-basket.jpg",
+  charity: food
 }
 |> Repo.insert!()
 
@@ -97,7 +121,8 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 2,
   status: :open,
-  image_path: "/images/pet-photo.jpg"
+  image_path: "/images/pet-photo.jpg",
+  charity: grace
 }
 |> Repo.insert!()
 
@@ -108,7 +133,8 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 3,
   status: :upcoming,
-  image_path: "/images/swamp-boat-ride.jpg"
+  image_path: "/images/swamp-boat-ride.jpg",
+  charity: wildlife
 }
 |> Repo.insert!()
 
@@ -119,7 +145,8 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 3,
   status: :upcoming,
-  image_path: "/images/race-car.jpg"
+  image_path: "/images/race-car.jpg",
+  charity: grace
 }
 |> Repo.insert!()
 
@@ -130,7 +157,8 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 2,
   status: :closed,
-  image_path: "/images/coffee.jpg"
+  image_path: "/images/coffee.jpg",
+  charity: hope
 }
 |> Repo.insert!()
 
@@ -141,6 +169,7 @@ alias Raffley.Raffles.Raffle
   """,
   ticket_price: 1,
   status: :upcoming,
-  image_path: "/images/balloon-ride.jpg"
+  image_path: "/images/balloon-ride.jpg",
+  charity: wildlife
 }
 |> Repo.insert!()
